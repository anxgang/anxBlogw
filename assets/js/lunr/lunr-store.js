var store = [{
        "title": "前言",
        "excerpt":"  別人都是 Rails Complete Guide，但本篇是 Rails Compact Guide， 適合三分鐘熱度之人閱讀，每篇保證三分鐘內搞定。   目標受眾      會上網   會使用滑鼠鍵盤   準備工作      一台電腦 windows、mac、linux 皆可   指南三部分      第一部分，將基本流程跑一次（環境準備、建立專案、上線)   第二部分，各種業務流程基本寫法   第三部分，各種元件製作的方式   ","categories": [],
        "tags": [],
        "url": "/docs/rails-compact-guide/01-getting-started",
        "teaser": "/assets/images/unsplash-gallery-image-3-th.jpg"
      },{
        "title": "環境安裝",
        "excerpt":"首先，選擇一個開發用的作業系統，先把 Rails 的環境安裝好。   開始安裝   個人推薦作業系統： Mac &gt; Ubuntu &gt; Windows      首推 Mac 是因為以此為開發環境的人比較多，線上討論的會比較多   Ubuntu 通常被當作正式環境的使用，當作主力開發環境當然也沒問題，線上討論也不算少   而 Windows 10 以上內建 Ubuntu 子系統(WSL2)，部分設定步驟比原生 Ubuntu 多一點，速度也稍慢，但如果手邊只有 windows，還是值得一試。   Note: 個人使用 Windows 10 WSL2 當開發機也有２年了，舉凡開發網頁、手機軟體、電腦應用程式，設定得好的話，基本上也沒什麼大問題。  ","categories": [],
        "tags": [],
        "url": "/docs/rails-compact-guide/02-installation",
        "teaser": "/assets/images/unsplash-gallery-image-3-th.jpg"
      },{
        "title": "Rails 環境安裝 (on Mac)",
        "excerpt":"把 Rails on Mac 的環境安裝好。   安裝 homebrew    /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"  安裝 git    brew install git    # 設定（僅一次即可）   git config --global color.ui true   git config --global user.name \"YOUR NAME\"   git config --global user.email \"YOUR@EMAIL.com\"   ssh-keygen -t rsa -C \"YOUR@EMAIL.com\"  安裝 rvm    gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB   \\curl -sSL https://get.rvm.io | bash  安裝 ruby 及 rails    rvm install ruby --stable   ruby -v    gem install bundler   bundle -v    gem install rails   rails -v  安裝 開發軟體    brew install --cask iterm2 # 安裝 iTerm2   brew install --cask visual-studio-code # 安裝 vscode  安裝 資料庫    brew install sqlite3   brew install postgresql   brew install redis   參考      GoRails - Install Ruby On Rails on MacOS Guides  ","categories": [],
        "tags": [],
        "url": "/docs/rails-compact-guide/03-install_rails_on_mac",
        "teaser": "/assets/images/unsplash-gallery-image-3-th.jpg"
      },{
        "title": "Rails 環境安裝 (on Ubuntu)",
        "excerpt":"把 Rails on Ubuntu 的環境安裝好。   安裝 相關套件    sudo apt install curl   curl -sL https://deb.nodesource.com/setup_lts.x | sudo -E bash -   curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -   echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list   sudo apt-get update   sudo apt-get install git-core zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev software-properties-common libffi-dev nodejs yarn wget gpg  設定 git    # 設定（僅一次即可）   git config --global color.ui true   git config --global user.name \"YOUR NAME\"   git config --global user.email \"YOUR@EMAIL.com\"   ssh-keygen -t rsa -C \"YOUR@EMAIL.com\"  安裝 rvm    gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB   \\curl -sSL https://get.rvm.io | bash  安裝 ruby 及 rails    rvm install ruby --stable   ruby -v    gem install bundler   bundle -v    gem install rails   rails -v  安裝 vscode    wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor &gt; packages.microsoft.gpg   sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg   sudo sh -c 'echo \"deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main\" &gt; /etc/apt/sources.list.d/vscode.list'   rm -f packages.microsoft.gpg    sudo apt install apt-transport-https   sudo apt update   sudo apt install code # 安裝 vscode  安裝 資料庫    sudo apt install postgresql libpq-dev   sudo -u postgres createuser $USER -s    sudo apt install redis-server   參考      GoRails - Install Ruby On Rails on Ubuntu Guides  ","categories": [],
        "tags": [],
        "url": "/docs/rails-compact-guide/04-install_rails_on_ubuntu",
        "teaser": "/assets/images/unsplash-gallery-image-3-th.jpg"
      },{
        "title": "Rails 環境安裝 (on windows)",
        "excerpt":"注意: 本文尚未完成，請斟酌閱讀！   把 Rails on windows 的環境安裝好。   安裝 子系統 WSL2 Ubuntu  以最高權限開啟 Powershell 並執行    dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart   dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart  至 Microsoft Store 安裝 Ubuntu   安裝 Windows Terminal   至 Microsoft Store 安裝 Windows Terminal   安裝 相關套件    sudo apt-get update   sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev software-properties-common libffi-dev  設定 git    # 設定（僅一次即可）   git config --global color.ui true   git config --global user.name \"YOUR NAME\"   git config --global user.email \"YOUR@EMAIL.com\"   ssh-keygen -t rsa -C \"YOUR@EMAIL.com\"  安裝 rvm    gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB   \\curl -sSL https://get.rvm.io | bash  安裝 ruby 及 rails    rvm install ruby --stable   ruby -v    gem install bundler   bundle -v    gem install rails   rails -v  安裝 資料庫    sudo apt install postgresql libpq-dev   sudo -u postgres createuser $USER -s    sudo apt install redis-server   參考     GoRails - Install Ruby On Rails on Windows Guides   官方安裝 WSL2  ","categories": [],
        "tags": [],
        "url": "/docs/rails-compact-guide/05-install_rails_on_windows",
        "teaser": "/assets/images/unsplash-gallery-image-3-th.jpg"
      },{
        "title": "Jekyll 使用 private repo 建立 gh-pages",
        "excerpt":"免費版的 github 建立 gh-pages 必須公開 repository。 如果想省錢又不想把 markdown 直接公諸於世該怎麼辦？   目標   本文使用 jekyll ， 透過一個 private repository (原始碼)， 搭配一個 public repository (產出的 html)， 來達到目標。   graph LR   subgraph client     A[source code]   end   A[source code] --&gt;|git push| B(private repo)   subgraph github     B --&gt;|\"deploy(by action)\"| D[public repo]   end   步驟      先到 github 上建立好兩個 repo 。例如：myblog_private, myblog_public,   加入 github action，並 push 到 myblog_private      # .github/workflows/jekyll.yml  name: Deploy Jekyll site to Pages  on:    push:      branches: [\"main\"]    workflow_dispatch:  permissions:    contents: read    pages: write    id-token: write  concurrency:    group: \"pages\"    cancel-in-progress: true  jobs:    deploy:      runs-on: ubuntu-latest      steps:        - name: Checkout          uses: actions/checkout@v3        - name: Setup Ruby          uses: ruby/setup-ruby@v1          with:            ruby-version: '3.0'            bundler-cache: true            cache-version: 0 # Increment this number if you need to re-download cached gems        - name: Build with Jekyll          run: bundle exec jekyll build          env:            JEKYLL_ENV: production        - name: Upload artifact          uses: actions/upload-pages-artifact@v1        - name: Deploy to GitHub Pages 🚀          uses: peaceiris/actions-gh-pages@v3          with:            deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}            external_repository: mygithub/myblog_public            publish_branch: main            publish_dir: ./_site           產生一組 gh-pages 專用的 public key 和 private key       ssh-keygen -t rsa -b 4096 -C \"$(git config user.email)\" -f gh-pages -N \"\"                 public key: gh-pages.pub       private key: gh-pages           把 private key 加到 private repo 的 secerts 中，並取名為 ACTIONS_DEPLOY_KEY   把 public key 加到 public repo 的 deploy keys 中   參考     deploy-to-external-repository   create-ssh-deploy-key  ","categories": ["Jekyll"],
        "tags": ["jekyll","github","gh-pages"],
        "url": "/jekyll/private-repo-with-gh-pages/",
        "teaser": "/assets/images/unsplash-gallery-image-2-th.jpg"
      },{
        "title": "Jekyll 使用 mermaid 繪製流程圖",
        "excerpt":"mermaid 是使用 JavaScript 開發的圖表工具。 他受到 Markdown 啟發，使用簡易的文字定義，即可動態建立圖表。 本文介紹如何將其嵌入 Jekyll 之中。   目標   將 mermaid 套件加入 jekyll，使用 Markdown 的程式區塊，快速的撰寫並建立圖表   安裝   在頁面上插入   &lt;script type=\"module\"&gt;   import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@9/dist/mermaid.esm.min.mjs'   mermaid.init({noteMargin: 10}, \".language-mermaid\") &lt;/script&gt;    使用方式   這邊舉出一些範例，詳細用法可至 mermaid 官網查詢   另外也有 mermaid live edit 可以線上預覽產生的圖       範例： 使用 mermaid 將語法寫在程式區塊中   ```mermaid   flowchart LR      A –&gt; B   ```   flowchart LR   A --&gt; B     流程圖   flowchart LR   A[Start] --&gt; B{Is it?}   B -- Yes --&gt; C[OK]   C --&gt; D[Rethink]   D -.-&gt; B   B -- No ----&gt; E[End]  flowchart LR   A[Start] --&gt; B{Is it?}   B -- Yes --&gt; C[OK]   C --&gt; D[Rethink]   D -.-&gt; B   B -- No ----&gt; E[End]   flowchart TD     c1--&gt;a2     subgraph one     a1--&gt;a2     end     subgraph two     b1--&gt;b2     end     subgraph three     c1--&gt;c2     end   flowchart TD     c1--&gt;a2     subgraph one     a1--&gt;a2     end     subgraph two     b1--&gt;b2     end     subgraph three     c1--&gt;c2     end   序列圖   sequenceDiagram     Alice-&gt;&gt;John: Hello John, how are you?     John--&gt;&gt;Alice: Great!     Alice-)John: See you later!  sequenceDiagram     Alice-&gt;&gt;John: Hello John, how are you?     John--&gt;&gt;Alice: Great!     Alice-)John: See you later!   實體關係圖(ERD)   --- title: Order example --- erDiagram     CUSTOMER ||--o{ ORDER : places     ORDER ||--|{ LINE-ITEM : contains     CUSTOMER }|..|{ DELIVERY-ADDRESS : uses  --- title: Order example --- erDiagram     CUSTOMER ||--o{ ORDER : places     ORDER ||--|{ LINE-ITEM : contains     CUSTOMER }|..|{ DELIVERY-ADDRESS : uses   erDiagram     CUSTOMER ||--o{ ORDER : places     CUSTOMER {         string name         string custNumber         string sector     }     ORDER ||--|{ LINE-ITEM : contains     ORDER {         int orderNumber         string deliveryAddress     }     LINE-ITEM {         string productCode         int quantity         float pricePerUnit     }  erDiagram     CUSTOMER ||--o{ ORDER : places     CUSTOMER {         string name         string custNumber         string sector     }     ORDER ||--|{ LINE-ITEM : contains     ORDER {         int orderNumber         string deliveryAddress     }     LINE-ITEM {         string productCode         int quantity         float pricePerUnit     }   甘特圖   gantt     title A Gantt Diagram     dateFormat  YYYY-MM-DD     section Section     A task           :a1, 2023-01-01, 30d     Another task     :after a1  , 20d     section Another     Task in sec      :2023-01-12  , 12d     another task      : 24d  gantt     title A Gantt Diagram     dateFormat  YYYY-MM-DD     section Section     A task           :a1, 2023-01-01, 30d     Another task     :after a1  , 20d     section Another     Task in sec      :2023-01-12  , 12d     another task      : 24d  圓餅圖   pie showData     title Key elements in Product X     \"Calcium\" : 42.96     \"Potassium\" : 50.05     \"Magnesium\" : 10.01     \"Iron\" :  5  pie showData     title Key elements in Product X     \"Calcium\" : 42.96     \"Potassium\" : 50.05     \"Magnesium\" : 10.01     \"Iron\" :  5   Git 圖   --- title: Example Git diagram --- gitGraph    commit    commit    branch develop    checkout develop    commit    commit    checkout main    merge develop    commit id: \"Normal\" tag: \"v1.0.0\"    commit id: \"Reverse\" type: REVERSE tag: \"RC_1\"    commit id: \"Highlight\" type: HIGHLIGHT tag: \"8.8.4\"  --- title: Example Git diagram --- gitGraph    commit    commit    branch develop    checkout develop    commit    commit    checkout main    merge develop    commit id: \"Normal\" tag: \"v1.0.0\"    commit id: \"Reverse\" type: REVERSE tag: \"RC_1\"    commit id: \"Highlight\" type: HIGHLIGHT tag: \"8.8.4\"   參考      mermaid   mermaid online playground  ","categories": ["Jekyll"],
        "tags": ["jekyll","mermaid"],
        "url": "/jekyll/drawing-flowcharts-with-mermaid-in-jekyll/",
        "teaser": "/assets/images/unsplash-gallery-image-2-th.jpg"
      },{
        "title": "Ubuntu 如何使用排程 crontab",
        "excerpt":"ubuntu 如何使用排程 crontab   目標   介紹 crontab 基本用法   安裝   $ sudo apt update $ sudo apt install cron   服務   $ sudo service cron status $ sudo service cron start $ sudo service cron restart $ sudo service cron stop   提示: 安裝完服務會自動啟動，文件設定完也不用重啟，所以這幾行其實很少用。   使用方式   以下兩種方式:   user   crontab -l #列出 crontab -r #刪除 crontab -e #編輯   root   sudo vim /etc/crontab   # 分 時 日 月 星期 指令 0 0,12 1 * * /usr/bin/certbot renew # 每個月1號的0點和12點執行 certbot renew       提示:   個人是習慣直接編輯/etc/crontab，如不熟悉可至工具網頁 crontab.guru 試試是否正確     參考     技術研究 Ubuntu CronTab - DavidKross   crontab.guru  ","categories": ["Ubuntu"],
        "tags": ["crontab","ubuntu"],
        "url": "/ubuntu/how-to-use-crontab-in-ubuntu-copy/",
        "teaser": "/assets/images/unsplash-gallery-image-2-th.jpg"
      },{
        "title": "Ubuntu 如何 mount windows 的分享資料夾",
        "excerpt":"ubuntu 如何連接 windows 的分享資料夾   目標   ubuntu 連接 windows 的分享資料夾   安裝   安裝 CIFS   $ sudo apt-get install cifs-utils   On older systems:   $ sudo apt-get install smbfs   步驟      確保您有以下訊息：            用於分享資料夾的 Windows 名稱和密碼       分享資料夾連結（例如 //server/share）或 IP 位置       Linux 上的 root 權限           以 root 登錄 Linux（或使用 su 或 sudo）   建立所需的掛載點：       $ mkdir -p /mnt/YOUR_PATH           開始掛載       $ mount -t cifs //YOUR_SERVER/SHARE_FORDER -o username=YOUR_NAME,password=YOUR_PASSWORD /mnt/YOUR_PATH           範例      先把要 mount 位置的資料夾建好       $ mkdir -p /mnt/my-server           將 //192.168.1.100/d$/download 這個分享資料夾 mount 到 /mnt/my-server (帳密是administrator/pwd123)       $ sudo mount -t cifs //192.168.1.100/d$/download -o username=administrator,password=pwd123 /mnt/my-server           可以查看 monut 是否正確       $ ls /mnt/my-server           開機自動掛載   設定開機自動掛載   需以 root 權限編輯 /etc/fstab   # device   MountPoint  filesystem  parameters   dump   fsck # 範例1. 無帳密登入/可寫入: //192.168.1.200/storage /mnt/share-server cifs guest,iocharset=utf8,file_mode=0777,dir_mode=0777 # 範例2. 帳密登入/只讀: //192.168.1.100/d$/download /mnt/my-server cifs username=administrator,password=pwd123,iocharset=utf8 # 範例3. 密碼需要隱藏: # 另外建立 /home/ivan/.smbcredentials 並且使用 chmod 600 #  第一行 username=administrator  #  第二行 password=pwd123 //192.168.1.100/d$/download /mnt/my-server cifs credentials=/home/ivan/.smbcredentials,iocharset=utf8   驗證可使用以下指令全部掛載   mount -a   取消掛載   指定某個   umount /mnt/my-server   全部   umount -a   參考     stackexchange.com - Copy file from Windows shared folder to Unix   cyberciti.biz - How to mount remote windows partition (windows share) under Linux   wiki.ubuntu.com - Mount Windows Shares Permanently  ","categories": ["Ubuntu"],
        "tags": ["mount","ubuntu"],
        "url": "/ubuntu/how-to-mount-windows-share-folder-in-ubuntu/",
        "teaser": "/assets/images/unsplash-gallery-image-2-th.jpg"
      }]
